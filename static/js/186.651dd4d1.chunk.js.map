{"version":3,"file":"static/js/186.651dd4d1.chunk.js","mappings":"6OAIe,SAASA,IACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACJF,IACJG,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,GAAW,OAAII,GAAnB,GAEnC,GAAE,CAACR,EAASG,KAGZ,wBACS,OAAPA,QAAO,IAAPA,GAAAA,EAASM,OACTN,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACC,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFHF,EAAOG,GADC,KAOlB,iDAIH,C,wMCzBDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACC,6NAEM,IAAMC,EAAmB,mCAAG,6GAEVD,EAAAA,EAAAA,IAAA,sBAFU,cAE3BE,EAF2B,OAGjCC,QAAQC,IAAI,gBAAiBF,EAASG,KAAKC,SAHV,kBAK1BJ,EAASG,KAAKC,SALY,gCAOjCC,EAAAA,OAAAA,QAAA,UAAkB,KAAMC,UAPS,yDAAH,qDAWnBC,EAAc,mCAAG,WAAMV,GAAN,gGAERC,EAAAA,EAAAA,IAAA,gBAAmBD,IAFX,cAEtBW,EAFsB,OAG5BP,QAAQC,IAAIM,EAAML,MAHU,kBAKrBK,EAAML,MALe,gCAO5BE,EAAAA,OAAAA,QAAA,UAAkB,KAAMC,UAPI,yDAAH,sDAWdG,EAAa,mCAAG,WAAMZ,GAAN,gGAERC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,aAFQ,cAErBa,EAFqB,OAG3BT,QAAQC,IAAIQ,EAAKP,KAAKO,MAHK,kBAKpBA,EAAKP,KAAKO,MALU,gCAO3BL,EAAAA,OAAAA,QAAA,UAAkB,KAAMC,UAPG,yDAAH,sDAWbjB,EAAgB,mCAAG,WAAMQ,GAAN,gGAERC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,aAFQ,cAExBX,EAFwB,OAG9Be,QAAQC,IAAIhB,EAAQiB,KAAKC,SAHK,kBAKvBlB,EAAQiB,KAAKC,SALU,gCAO9BC,EAAAA,OAAAA,QAAA,UAAkB,KAAMC,UAPM,yDAAH,sDAWhBK,EAAY,mCAAG,WAAMC,GAAN,gGAEJd,EAAAA,EAAAA,IAAA,6BAAgCc,IAF5B,cAEpBR,EAFoB,OAG1BH,QAAQC,IAAI,uBAAwBE,EAAQD,KAAKC,SAHvB,kBAKnBA,EAAQD,KAAKC,SALM,gCAO1BC,EAAAA,OAAAA,QAAA,UAAkB,KAAMC,UAPE,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/fetchMovies.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { fetchReviewsById } from \"../../utils/fetchMovies\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Reviews() {\n\tconst { movieId } = useParams();\n\tconst [reviews, setReviews] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (!reviews) {\n\t\t\tfetchReviewsById(movieId).then(rev => setReviews([...rev]));\n\t\t}\n\t}, [movieId, reviews]);\n\n\treturn (\n\t\t<ul>\n\t\t\t{reviews?.length ? (\n\t\t\t\treviews.map(review => (\n\t\t\t\t\t<li key={review.id}>\n\t\t\t\t\t\t<h3>Author:{review.author}</h3>\n\t\t\t\t\t\t<p>{review.content}</p>\n\t\t\t\t\t</li>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<p>Here no reviews yet!</p>\n\t\t\t)}\n\t\t</ul>\n\t);\n}\n","import axios from \"axios\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.headers.common[\"Authorization\"] =\n\t\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYmI4NjA0YTQxYTY4ZTc5YTFlOWVlZmM3Mjg0MmVjMSIsInN1YiI6IjY0NzBlMjY4MTNhMzIwMDBkY2Y5MGEzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RsXnr-598oJBtRU8ad6qDSzA1gOYtXAbicSLwSyV3Kk\";\n\nexport const fetchTrendingMovies = async () => {\n\ttry {\n\t\tconst trending = await axios.get(`trending/movie/day`);\n\t\tconsole.log(\"trending.data\", trending.data.results);\n\n\t\treturn trending.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchMovieById = async id => {\n\ttry {\n\t\tconst movie = await axios.get(`movie/${id}`);\n\t\tconsole.log(movie.data);\n\n\t\treturn movie.data;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchCastById = async id => {\n\ttry {\n\t\tconst cast = await axios.get(`movie/${id}/credits`);\n\t\tconsole.log(cast.data.cast);\n\n\t\treturn cast.data.cast;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchReviewsById = async id => {\n\ttry {\n\t\tconst reviews = await axios.get(`movie/${id}/reviews`);\n\t\tconsole.log(reviews.data.results);\n\n\t\treturn reviews.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchByQuery = async query => {\n\ttry {\n\t\tconst results = await axios.get(`search/movie?query=${query}`);\n\t\tconsole.log(\"results.data.results\", results.data.results);\n\n\t\treturn results.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviewsById","then","rev","length","map","review","author","content","id","axios","fetchTrendingMovies","trending","console","log","data","results","Notify","message","fetchMovieById","movie","fetchCastById","cast","fetchByQuery","query"],"sourceRoot":""}