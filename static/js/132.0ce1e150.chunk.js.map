{"version":3,"file":"static/js/132.0ce1e150.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.scss?57ee","pages/MovieDetails/MovieDetails.jsx","utils/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MovieDetails_poster__Fyg8Y\",\"wrapper\":\"MovieDetails_wrapper__0ODWr\",\"info\":\"MovieDetails_info__Ngz-G\"};","import { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { fetchMovieById } from \"utils/fetchMovies\";\n\nimport css from \"./MovieDetails.module.scss\";\nimport Fallback from \"components/Fallback/Fallback\";\n\nexport default function MovieDetails() {\n\tconst [movie, setMovie] = useState(null);\n\tconst { movieId } = useParams();\n\n\tconst location = useLocation();\n\tconst backLinkHref = location.state?.from ?? \"/movies\";\n\n\tuseEffect(() => {\n\t\tif (!movie) {\n\t\t\tfetchMovieById(movieId).then(setMovie);\n\t\t}\n\t}, [movie, movieId]);\n\n\tconst releaseYear = movie?.release_date ? new Date(movie.release_date).getFullYear() : \"N/A\";\n\n\treturn (\n\t\tmovie && (\n\t\t\t<>\n\t\t\t\t<Link to={backLinkHref}>Back</Link>\n\t\t\t\t<div className={css.wrapper}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tclassName={css.poster}\n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n\t\t\t\t\t\talt={movie.title}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={css.info}>\n\t\t\t\t\t\t<h2 className={css.title}>{`${movie.title} (${releaseYear})`}</h2>\n\t\t\t\t\t\t<p className={css.tagline}>{movie.tagline}</p>\n\n\t\t\t\t\t\t<p className={css.score}>User score: {(movie.vote_average * 10).toFixed(2)}%</p>\n\t\t\t\t\t\t<h3>Genres</h3>\n\n\t\t\t\t\t\t<p>{movie.genres.map(genre => `${genre.name} `)}</p>\n\n\t\t\t\t\t\t<h3>Overview</h3>\n\t\t\t\t\t\t<p className={css.overview}>{movie.overview}</p>\n\n\t\t\t\t\t\t<h3>Status</h3>\n\n\t\t\t\t\t\t<p className={css.status}>{movie.status}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Link to={\"cast\"} state={{ from: backLinkHref }}>\n\t\t\t\t\tCast\n\t\t\t\t</Link>\n\t\t\t\t<Link to={\"reviews\"} state={{ from: backLinkHref }}>\n\t\t\t\t\tReviews\n\t\t\t\t</Link>\n\n\t\t\t\t<Suspense fallback={<Fallback />}>\n\t\t\t\t\t<Outlet id={movieId} />\n\t\t\t\t</Suspense>\n\t\t\t</>\n\t\t)\n\t);\n}\n","import axios from \"axios\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.headers.common[\"Authorization\"] =\n\t\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYmI4NjA0YTQxYTY4ZTc5YTFlOWVlZmM3Mjg0MmVjMSIsInN1YiI6IjY0NzBlMjY4MTNhMzIwMDBkY2Y5MGEzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RsXnr-598oJBtRU8ad6qDSzA1gOYtXAbicSLwSyV3Kk\";\n\nexport const fetchTrendingMovies = async () => {\n\ttry {\n\t\tconst trending = await axios.get(`trending/movie/day`);\n\t\tconsole.log(\"trending.data\", trending.data.results);\n\n\t\treturn trending.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchMovieById = async id => {\n\ttry {\n\t\tconst movie = await axios.get(`movie/${id}`);\n\t\tconsole.log(movie.data);\n\n\t\treturn movie.data;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchCastById = async id => {\n\ttry {\n\t\tconst cast = await axios.get(`movie/${id}/credits`);\n\t\tconsole.log(cast.data.cast);\n\n\t\treturn cast.data.cast;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchReviewsById = async id => {\n\ttry {\n\t\tconst reviews = await axios.get(`movie/${id}/reviews`);\n\t\tconsole.log(reviews.data.results);\n\n\t\treturn reviews.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n\nexport const fetchByQuery = async query => {\n\ttry {\n\t\tconst results = await axios.get(`search/movie?query=${query}`);\n\t\tconsole.log(\"results.data.results\", results.data.results);\n\n\t\treturn results.data.results;\n\t} catch (error) {\n\t\tNotify.failure(`${error.message}`);\n\t}\n};\n"],"names":["MovieDetails","useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","then","releaseYear","release_date","Date","getFullYear","to","className","css","loading","src","poster_path","alt","title","tagline","vote_average","toFixed","genres","map","genre","name","overview","status","Suspense","fallback","Fallback","id","axios","fetchTrendingMovies","trending","console","log","data","results","Notify","message","fetchCastById","cast","fetchReviewsById","reviews","fetchByQuery","query"],"sourceRoot":""}